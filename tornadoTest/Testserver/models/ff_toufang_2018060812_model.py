#!/usr/bin/env python
# -*-coding:utf-8-*-
import six,os,sys,pickle,base64
import math
import pickle
import numpy as np
from collections import OrderedDict

MODEL_NAME = 'ff_toufang_2018060812'

lr_model = pickle.loads(base64.b64decode(b'gAJjc2tsZWFybi5saW5lYXJfbW9kZWwubG9naXN0aWMKTG9naXN0aWNSZWdyZXNzaW9uCnEAKYFxAX1xAihYBwAAAHBlbmFsdHlxA1gCAAAAbDFxBFgEAAAAZHVhbHEFiVgDAAAAdG9scQZHPxo24uscQy1YAQAAAENxB0c/tHrhR64Ue1gNAAAAZml0X2ludGVyY2VwdHEIiFgRAAAAaW50ZXJjZXB0X3NjYWxpbmdxCUsBWAwAAABjbGFzc193ZWlnaHRxCk5YDAAAAHJhbmRvbV9zdGF0ZXELTlgGAAAAc29sdmVycQxYCQAAAGxpYmxpbmVhcnENWAgAAABtYXhfaXRlcnEOS2RYCwAAAG11bHRpX2NsYXNzcQ9YAwAAAG92cnEQWAcAAAB2ZXJib3NlcRFLAFgKAAAAd2FybV9zdGFydHESiVgGAAAAbl9qb2JzcRNLAVgIAAAAY2xhc3Nlc19xFGNudW1weS5jb3JlLm11bHRpYXJyYXkKX3JlY29uc3RydWN0CnEVY251bXB5Cm5kYXJyYXkKcRZLAIVxF2NfY29kZWNzCmVuY29kZQpxGFgBAAAAYnEZWAYAAABsYXRpbjFxGoZxG1JxHIdxHVJxHihLAUsChXEfY251bXB5CmR0eXBlCnEgWAIAAABmOHEhSwBLAYdxIlJxIyhLA1gBAAAAPHEkTk5OSv////9K/////0sAdHElYoloGFgRAAAAAAAAAAAAAAAAAAAAAADDsD9xJmgahnEnUnEodHEpYlgFAAAAY29lZl9xKmgVaBZLAIVxK2gch3EsUnEtKEsBSwFNiwGGcS5oI4loGFg8DQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmw7lZwrI9EcKtPxDDihMiw6HDiMOfwr/ChXzDsQ8Kw6rDiD9tXm09w4vDnMOUwr8AAAAAAAAAAEx2en0WesOHwr8AAAAAAAAAAHxewqpkw7nCsMKywr/CnsK2wo3Cl8KPZMKWwr/DoUojQ8OPC8Kewr8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgQ8OlE2JOwpnCv1s8Q8OrwqDDvcKYwr8AAAAAAAAAAAAAAAAAAAAASzV4w7cpdsKywr/CgDR+w4jDqVrCqT4AAAAAAAAAAFFKGErDrsKxwoDCvwAAAAAAAAAAwozDunPCqTdSwoI/e8K9SlHCr8KbwoTCvwAAAAAAAAAAZyQjw7LDol3Csj/CqsKXw51Aw6zDs8OIPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEDCpcK9Vi95wpo/AAAAAAAAAAAdNV5wEUHCrz9Qw5XClcK9wr1awrg/AAAAAAAAAAAtKkfCq8O7DcOUwr/CkCDDhhxmCsK4wr8NwpDCtnfCu23Co8K/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnDmHbCrsO0wpPCjsK/LCTCo8O7ScOpwpDCvww7zCnGZSwrTCvwAAAAAAAAAAAAAAAAAAAABgw6nDvzQkUXg/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEXCm8KYwqnDvHnCvwgw6AJKSFJwqPCvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw5NwRMOVNijCrcK/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHCksKGwo5rw5DCn8K/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADCi8Krw53Dr2bDgMKQPwAAAAAAAAAAAAAAAAAAAADCpcK8ejLDlV7Csj8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPixzTiXDk34/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABxwqFYwq/ChTHDgsoEwAw47CgMK/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAw5DCssOoK3nDn8K5PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtwpFQTmrDr8KiPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWw6XDvQfDk8OOw68/w5J1fC9DfMOaP8KJbcKOwqxhw7BzP8KTw4HCsFcJw6LDoMK/wp3Cvk/CkgfDiMOTPwAAAAAAAAAAw5TDmRcPw5zCjcKRwr8AAAAAAAAAAMO2w7/DnsOeworCmcOAwr9/B8KsNydHwpU/AAAAAAAAAADDoEbDliRfNsK9wr8AAAAAAAAAAAAAAAAAAAAAw4fCmgIvwqvDnMK1wr8AAAAAAAAAAMOpSkrDnkN1wq3Cv8KNw6bDpMKsOFbCv8K/AMOlwrknw70FwrM/wp/DnzVaLxDDgsK/worCuw3DmCwuwqzCvwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEvaBqGcTBScTF0cTJiWAoAAABpbnRlcmNlcHRfcTNoFWgWSwCFcTRoHIdxNVJxNihLAUsBhXE3aCOJaBhYDQAAAMOnwrbDkzDClQQQw4BxOGgahnE5UnE6dHE7YlgHAAAAbl9pdGVyX3E8aBVoFksAhXE9aByHcT5ScT8oSwFLAYVxQGggWAIAAABpNHFBSwBLAYdxQlJxQyhLA2gkTk5OSv////9K/////0sAdHFEYoloGFgEAAAAEwAAAHFFaBqGcUZScUd0cUhiWBAAAABfc2tsZWFybl92ZXJzaW9ucUlYBgAAADAuMTkuMXFKdWIu'.strip()))
mapper = pickle.loads(base64.b64decode(b''.strip()))
bannertype_encoder = pickle.loads(base64.b64decode(b'gAJ9cQAoWAYAAAAxMDgxNzhxAUc/kOkDQUIqMVgGAAAAMTA4MjE3cQJHP5FrjEnr99JYBgAAADEwODIyNHEDRz+S7uCW/IlrWAYAAAAxMDgyNDVxBEc/lNjRcrDFmVgGAAAAMTA4MjU0cQVHP4YIZiOMsyVYBgAAADEwODI5MnEGRz+S3X4+lcjCWAYAAAAxMDgyOTNxB0c/f0lkf3Jk7FgGAAAAMTE2MTA2cQhHP5Hhda2VNo1YBgAAADExNjE1MnEJRz+I2SRkJGUtWAYAAAAyMDMxMDhxCkc/k8woF1IMv3Uu'.strip()))
city_encoder = pickle.loads(base64.b64decode(b''.strip()))
hour_encoder = pickle.loads(base64.b64decode(b'gAJ9cQAoWAEAAAAwcQFHP5K0iLYY6HhYAQAAADFxAkc/krG5HBxdRFgCAAAAMTBxA0c/kJzEg3Ji3lgCAAAAMTFxBEc/kOiXywG7cFgCAAAAMTJxBUc/kZq37yXrGFgCAAAAMTNxBkc/kXYJPU8zXFgCAAAAMTRxB0c/kHY4jcnvQ1gCAAAAMTVxCEc/kKy+Oc3XplgCAAAAMTZxCUc/kbMhNcYYJ1gCAAAAMTdxCkc/kZpIEJZS81gCAAAAMThxC0c/j0lkDDYmc1gCAAAAMTlxDEc/kb7rmDtIplgBAAAAMnENRz+UJ3XKqUc7WAIAAAAyMHEORz+SAx+xLSGgWAIAAAAyMXEPRz+SZDTeu1dGWAIAAAAyMnEQRz+S7V2mGIj2WAIAAAAyM3ERRz+RuCeRrnN5WAEAAAAzcRJHP5YLti+cXZVYAQAAADRxE0c/mP6+Ar/eB1gBAAAANXEURz+Z+BCPAzGZWAEAAAA2cRVHP5Tcg876k2xYAQAAADdxFkc/lCfhOe0w0lgBAAAAOHEXRz+R9nM0s18yWAEAAAA5cRhHP5IwPHW/uOp1Lg=='.strip()))
province_encoder = pickle.loads(base64.b64decode(b'gAJ9cQAoWAkAAADkuIrmtbfluIJxAUc/kyyHVvXVZVgJAAAA5LqR5Y2X55yBcQJHP5CDGcVnxGJYCQAAAOWQieael+ecgXEDRz+S27kjD60bWAYAAADlpJblm71xBEc/TvKTADpBFVgJAAAA5a6J5b6955yBcQVHP5EXWSuK5MRYCQAAAOWxseilv+ecgXEGRz+QFJgT1W16WAkAAADlub/kuJznnIFxB0c/kTq/MKu7P1gYAAAA5paw55aG57u05ZC+5bCU6Ieq5rK75Yy6cQhHP5Bd9RNFPRxYBgAAAOacquefpXEJRz+SbkJxAepMWAkAAADmsZ/opb/nnIFxCkc/jbrMT8zGAFgJAAAA5rKz5Y2X55yBcQtHP4/mgPPs/nxYCQAAAOa1t+WNl+ecgXEMRz+PjafyTqJpWAkAAADmuZbljZfnnIFxDUc/lD1/p6e/t1gJAAAA55SY6IKD55yBcQ5HP5EGYWZ9GeNYCQAAAOemj+W7uuecgXEPRz+SioU5yg8rWAkAAADotLXlt57nnIFxEEc/l1YDLKGLxlgJAAAA6L695a6B55yBcRFHP5NuU9FDTmdYCQAAAOmHjeW6huW4gnESRz+StqpsOwC8WAkAAADpmZXopb/nnIFxE0c/kkKfFBiDO3Uu'.strip()))
weekday_encoder = pickle.loads(base64.b64decode(b'gAJ9cQAoWAEAAAAxcQFHP5F15sb+7IZYAQAAADJxAkc/kaO7ZPiZHFgBAAAAM3EDRz+Rv9u1fJMHWAEAAAA0cQRHP5HBA9yrF6RYAQAAADVxBUc/knyyksCznVgBAAAANnEGRz+TkW49DL5vWAEAAAA3cQdHP5I4PiPd59N1Lg=='.strip()))
order_columns = pickle.loads(base64.b64decode(b''.strip()))


def calculate_hist_ratio(data):
    data['history_1st_jump_ratio'] = 0.0 if math.fabs(data['quarter_a25']) < 1e-6 \
        else data['quarter_a40'] / data['quarter_a25']

    data['history_2nd_jump_ratio'] = 0.0 if math.fabs(data['quarter_a40']) < 1e-6 \
        else data['quarter_a60'] / data['quarter_a40']

    data['history_convert_ratio'] = data['history_1st_jump_ratio'] * data['history_2nd_jump_ratio']


def log_quarter(data):
    data['log_quarter_a25'] = np.log(data['quarter_a25']+1)
    data['log_quarter_a40'] = np.log(data['quarter_a40']+1)
    data['log_quarter_a60'] = np.log(data['quarter_a60']+1)


def deal_quarter_a25(data):

    def bin_quarter_a25(x):
        if x <= 1.0:
            return '(-0.001, 1.0]'
        elif x <= 4.0:
            return '(1.0, 4.0]'
        elif x <= 9.0:
            return '(4.0, 9.0]'
        elif x <= 22.0:
            return '(9.0, 22.0]'
        else:
            return '(22.0, 179.0]'

    data['quarter_a25_bin'] = bin_quarter_a25(data['quarter_a25'])


def deal_quarter_a40(data):

    def bin_quarter_a40(x):
        if x <= 1.0:
            return '(-0.001, 1.0]'
        elif x <= 2.0:
            return '(1.0, 2.0]'
        else:
            return '(2.0, 14.0]'

    data['quarter_a40_bin'] = bin_quarter_a40(data['quarter_a40'])


def deal_quarter_a60(data):

    def bin_quarter_a60(x):
        if x <= 1.0:
            return '(-0.001, 1.0]'
        else:
            return '(1.0, 6.0]'

    data['quarter_a60_bin'] = bin_quarter_a60(data['quarter_a60'])


def deal_hour(data):

    def time_segmentation(hour):
        if 0 <= hour <= 7:
            return "raretime"
        elif 8 <= hour <= 19:
            return "worktime"
        else:
            return "resttime"

    data['hour_seg'] = time_segmentation(int(data['hour']))


def deal_getui_score(data):

    def bin_getui_score(x):
        if x <= 0.92:
            return '(-0.001, 0.92]'
        else:
            return '(0.92, 1.0]'

    data['getui_score_bin'] = bin_getui_score(data['getui_score'])


def deal_province(data):

    def province_format(x):
        if x in '重庆|上海':
            x = x + '市'
        elif x in '山西|辽宁|吉林|安徽|江西|河南|湖南|广东|海南|贵州|云南|陕西|甘肃':
            x = x + '省'
        elif x == '闽':
            x = '福建省'
        elif x == '新疆':
            x = '新疆维吾尔自治区'
        elif x == '台湾':
            x = '台湾省'
        elif x[-1] == '州':
            x = '外国'
        else:
            x = '未知'
        return x

    data['province'] = province_format(data['province'])

    def bin_province(x):
        if x in '贵州省|浙江省|湖南省|未知|江苏省|辽宁省|上海市|广西壮族自治区|吉林省|湖北省|重庆市|福建省':
            return '(0.018, 1.0]'
        elif x in '西藏自治区|陕西省|河北省|黑龙江省|广东省|安徽省|四川省|甘肃省|云南省|北京市|内蒙古自治区':
            return '(0.016, 0.018]'
        else:
            return '(-0.01, 0.016]'

    data['province_bin'] = bin_province(data['province'])


def assign_tag_rate(data, mean_rate=0.017):

    x = data['bannerType']
    data['bannerType_encoder'] = round(bannertype_encoder[x], 6) if x in bannertype_encoder else mean_rate

    x = data['hour']
    data['hour_encoder'] = round(hour_encoder[x], 6) if x in hour_encoder else mean_rate

    x = data['weekday']
    data['weekday_encoder'] = round(weekday_encoder[x], 6) if x in weekday_encoder else mean_rate

    x = data['province']
    data['province_encoder'] = round(province_encoder[x], 6) if x in province_encoder else mean_rate

    x = data['city']
    data['city_encoder'] = round(city_encoder[x], 6) if x in city_encoder else mean_rate


def feature_engineering(data):
    calculate_hist_ratio(data)

    log_quarter(data)

    deal_quarter_a25(data)
    deal_quarter_a40(data)
    deal_quarter_a60(data)

    deal_hour(data)

    deal_getui_score(data)

    deal_province(data)

    assign_tag_rate(data)

    return data


def calc_score(item, columns):
    # hard rule
    ff_reg = item[-3]
    # qz_reg = item[-2]
    day_a25 = item[-1]
    if ff_reg == 1 or day_a25 >= 15:
        return 0.0

    # extract features for model
    # one_df = pd.DataFrame(data=[item[:9]], columns=columns[:9])
    # featured_df = feature_engineering(one_df)
    data = OrderedDict(zip(columns[:9], item[:9]))
    featured_data = feature_engineering(data)

    def generate_sub_data(start_index, length, dict_key):
        sub_column = order_columns[start_index:(start_index+length)]
        sub_list = [0] * length
        index = 0
        try:
            index = sub_column.index(dict_key+'_'+str(featured_data[dict_key]))
        except ValueError:
            index = -1
        finally:
            if index >= 0:
                sub_list[index] = 1
        return sub_list

    data_list = list()
    data_list.append(featured_data['getui_score'])

    bannerType_list = generate_sub_data(1, 10, 'bannerType')
    data_list.extend(bannerType_list)
    hour_list = generate_sub_data(11, 24, 'hour')
    data_list.extend(hour_list)
    weekday_list = generate_sub_data(35, 7, 'weekday')
    data_list.extend(weekday_list)
    province_list = generate_sub_data(42, 19, 'province')
    data_list.extend(province_list)
    city_list = generate_sub_data(61, 307, 'city')
    data_list.extend(city_list)

    data_list.append(featured_data['history_1st_jump_ratio'])
    data_list.append(featured_data['history_2nd_jump_ratio'])
    data_list.append(featured_data['history_convert_ratio'])

    standard_log_quarter_a25 = round((featured_data['log_quarter_a25'] - 1.64104341) / 1.1054293, 6)
    data_list.append(standard_log_quarter_a25)
    standard_log_quarter_a40 = round((featured_data['log_quarter_a40'] - 0.06882841) / 0.23561247, 6)
    data_list.append(standard_log_quarter_a40)
    standard_log_quarter_a60 = round((featured_data['log_quarter_a60'] - 0.01495784) / 0.11243652, 6)
    data_list.append(standard_log_quarter_a60)

    quarter_a25_bin_list = generate_sub_data(374, 5, 'quarter_a25_bin')
    data_list.extend(quarter_a25_bin_list)
    quarter_a40_bin_list = generate_sub_data(379, 3, 'quarter_a40_bin')
    data_list.extend(quarter_a40_bin_list)
    if featured_data['quarter_a60_bin'] == '(1.0, 6.0]':
        data_list.append(1)
    else:
        data_list.append(0)

    hour_seg_list = generate_sub_data(383, 3, 'hour_seg')
    data_list.extend(hour_seg_list)

    if featured_data['getui_score_bin'] == '(0.92, 1.0]':
        data_list.append(1)
    else:
        data_list.append(0)

    province_bin_list = generate_sub_data(387, 3, 'province_bin')
    data_list.extend(province_bin_list)

    data_list.append(featured_data['bannerType_encoder'])
    data_list.append(featured_data['hour_encoder'])
    data_list.append(featured_data['weekday_encoder'])
    data_list.append(featured_data['province_encoder'])
    data_list.append(featured_data['city_encoder'])

    # print(data_list)
    #
    # featured_df = pd.DataFrame([list(featured_data.values())], columns=list(featured_data.keys()))
    # x_data = pd.DataFrame(mapper.transform(featured_df), columns=mapper.transformed_names_)
    # x_data = x_data.loc[0, :].tolist()
    # x_data = [int(x) if x == 0.0 or x == 1.0 else round(x, 6) for x in x_data]
    # print(x_data)
    # return round(lr_model.predict_proba(x_data)[:, 1][0], 6)

    return round(lr_model.predict_proba([data_list])[:, 1][0], 6)


def predict_proba(items):
    columns = ['getui_score', 'bannerType', 'hour', 'weekday', 'province', 'city',
               'quarter_a25', 'quarter_a40', 'quarter_a60', 'ff_register', 'qz_register', 'day_a25']
    ctr_score = []

    for item in items:
        ctr_score.append(calc_score(item, columns))

    return ctr_score



import struct,time, simplejson as json
# from tornado import gen,log
def format_output(req, fmt='json'):
    req.ret = json.dumps(req.ret)


def format_input(req, fmt=None):  #### req.ioinput,  req.iodata
    data = json.loads(req.data)
    req.data = data

columns = ['getui_score', 'bannerType', 'hour', 'weekday', 'province', 'city',
               'quarter_a25', 'quarter_a40', 'quarter_a60', 'ff_register', 'qz_register', 'day_a25']

def restore(s):
    if len(s) == 4:
        i = struct.unpack('>L', s)[0]
        return (i & 255), i>>8 if i>255 else 0
    else:
        return 0, 0

# @gen.coroutine
# def process(req):
#     items = req.data
#     rs = []
#     dids = []
#     for i in items:
#         dids.append(i["userEncrypt"])
#         t = i['tags']
#         rs.append([float(t.get('getui.2018022816.probability(1-0)','')),t['bannertype'],t['hour'],t['weekday'],t['province'],t['city']])
#
#     redis = finup_model.get_redis()
#     pp = finup_model.get_redis_pipeline()
#     _ = [pp.stack_call('GET', devid) for devid in dids ]
#     if not redis.is_connected():
#         _ = yield redis.connect()
#     res = yield redis.call(pp)
#     timestamp = time.time()
#     ts = int(timestamp) % 10000000
#     #print('REDIS: %r' % res)
#     #import pdb;pdb.set_trace()
#     for idx, bits in enumerate(res):
#         if bits is not None:
#             exposure_hourly, timestamp_hourly = restore(bits[ 0:4 ])
#             exposure_daily, timestamp_daily   = restore(bits[ 4:8 ])
#             quarter_a25, timestamp_a25        = restore(bits[ 8:12])  ## 曝光: a25
#             quarter_a40, timestamp_a40        = restore(bits[12:16]) ## 一跳: a40
#             quarter_a60, timestamp_a60        = restore(bits[16:20]) ## 二跳: a60
#             c = ord(bits[20] if len(bits)>20 else '\x00')
#             ff_register = c & 8
#             qz_register = c & 4
#
#             if exposure_hourly and (timestamp_hourly + 3600) < ts:
#                 exposure_hourly = 0
#
#             if exposure_daily and (timestamp_daily + 86400) < ts:
#                 exposure_daily = 0
#         else:
#             exposure_hourly, timestamp_hourly = 0,0
#             exposure_daily, timestamp_daily   = 0,0
#             quarter_a25, timestamp_a25        = 0,0
#             quarter_a40, timestamp_a40        = 0,0
#             quarter_a60, timestamp_a60        = 0,0
#             ff_register = 0
#             qz_register = 0
#
#         rs[idx].extend([quarter_a25, quarter_a40, quarter_a60, ff_register, qz_register, exposure_daily])
#     ret = predict_proba(rs)
#     raise gen.Return(zip(dids, ret))



if __name__ == "__main__":

    # items = [[0.966780, '0', '1', '6', '湖北省', '武汉', 7.0, 0.0, 0.0, 0, 0, 5]]
    items = [[0.966780, '0', '1', '6', '湖北省', '武汉', 7.0, 0.0, 0.0, 0, 0, 5],
             [0.966780, '0', '1', '6', '湖北省', '武汉', 7.0, 0.0, 0.0, 0, 0, 5],
             [0.966780, '0', '1', '6', '湖北省', '武汉', 7.0, 0.0, 0.0, 1, 0, 5]]
    ctr_score = predict_proba(items)
    print(ctr_score)
